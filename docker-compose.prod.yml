# Production Docker Compose with SSL and monitoring
version: "3.8"

services:
  app:
    build: .
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - SESSION_SECURE=true
    env_file:
      - .env.production
    depends_on:
      - db
      - redis
    volumes:
      - uploads:/var/www/html/uploads
      - logs:/var/www/html/logs
    networks:
      - blog-network
    restart: unless-stopped
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./backups:/backups
    networks:
      - blog-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - blog-network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/production.conf:/etc/nginx/conf.d/default.conf
      - ./docker/ssl:/etc/nginx/ssl:ro
      - uploads:/var/www/html/uploads:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - app
    networks:
      - blog-network
    restart: unless-stopped

  # Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    networks:
      - blog-network
    restart: unless-stopped

  # Log aggregation
  fluentd:
    image: fluent/fluentd:latest
    volumes:
      - ./docker/fluentd:/fluentd/etc
      - logs:/var/log/app:ro
    networks:
      - blog-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  uploads:
  logs:
  prometheus_data:

networks:
  blog-network:
    driver: bridge
